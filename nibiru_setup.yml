- name: Install 
  vars_files: 
    - vars/vars.yml
  hosts: "{{ host }}"
  gather_facts: no
  become: yes    

  tasks:
    
    - name: Get latest info
      uri:
        url: "{{ nibiru_githubapi_url }}{{ node_version }}"
        return_content: true
      register: nibiru_info

    - name: Get version 
      set_fact: version="{{ nibiru_info.json.tag_name }}"


    - name: Filter assets for amd64 platform
      set_fact:
        asset_file_name: "{{ nibiru_info.json.assets | selectattr('name', 'match', '.*linux_amd64.*')|map(attribute='name') | list }}"

    - name: Filter assets for amd64 platform
      set_fact:
        asset_url: "{{ nibiru_info.json.assets | selectattr('name', 'match', '.*linux_amd64.*')|map(attribute='browser_download_url') | list }}"
    
    - name: Print 
      debug:
        msg: "{{ asset_url[0] }} {{ asset_file_name[0]}}"

    # - name: Filter assets for amd64 platform
    #   set_fact:
    #     asset_file_name: "{{ nibiru_info.json.assets[5].name }}"

    # - name: Filter assets for amd64 platform
    #   set_fact:
    #     asset_url: "{{ nibiru_info.json.assets[5].browser_download_url }}"
    
    
    - name: Get Dockerfile from URL
      get_url:
        url: "{{ nibiru_dockerfile_url }}"
        dest: "./{{ dockerfile }}"

    - name: Build image and with build args
      community.docker.docker_image:
        name: "{{ image_name }}"
        tag: "{{ version }}"
        state: present
        force_absent: true
        build:
          path: "./"
          dockerfile: "{{ dockerfile }}"
          args:
            ARTIFACT_LINK: "{{ asset_url[0] }}"
            ARTIFACT_BIN: "{{ asset_file_name[0] }}"
        source: build


    
   